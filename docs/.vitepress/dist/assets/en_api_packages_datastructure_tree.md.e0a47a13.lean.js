import{_ as l,o as p,c as o,k as s,a,X as n}from"./chunks/framework.6e839c56.js";const _=JSON.parse('{"title":"Tree","description":"","frontmatter":{},"headers":[],"relativePath":"en/api/packages/datastructure/tree.md","filePath":"en/api/packages/datastructure/tree.md"}'),e={name:"en/api/packages/datastructure/tree.md"},t=s("h1",{id:"Tree",tabindex:"-1"},[a("Tree "),s("a",{class:"header-anchor",href:"#Tree","aria-label":'Permalink to "Tree"'},"​")],-1),r=s("p",null,"Tree is a collection of tree nodes. Each tree node has a value, a left pointer point to left node and a right pointer point to right node.",-1),c=s("div",{STYLE:"page-break-after: always;"},null,-1),y=s("h2",{id:"Source",tabindex:"-1"},[a("Source "),s("a",{class:"header-anchor",href:"#Source","aria-label":'Permalink to "Source"'},"​")],-1),F=s("ul",null,[s("li",null,[s("a",{href:"https://github.com/duke-git/lancet/blob/main/datastructure/tree/bstree.go",target:"_blank",rel:"noreferrer"},"https://github.com/duke-git/lancet/blob/main/datastructure/tree/bstree.go")])],-1),i=s("div",{STYLE:"page-break-after: always;"},null,-1),A=n("",2),E=s("div",{STYLE:"page-break-after: always;"},null,-1),u=n("",3),d=s("div",{STYLE:"page-break-after: always;"},null,-1),v=n("",63),B=[t,r,c,y,F,i,A,E,u,d,v];function C(m,g,b,h,T,f){return p(),o("div",null,B)}const k=l(e,[["render",C]]);export{_ as __pageData,k as default};
